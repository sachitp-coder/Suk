# <!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Happy Rose Day My Love</title>
    <style>
        body {
            text-align: center;
            background: url('https://source.unsplash.com/1600x900/?roses,romantic') no-repeat center center/cover;
            color: white;
            font-family: 'Arial', sans-serif;
            margin: 0;
            padding: 0;
        }
        .container {
            margin-top: 15%;
        }
        h1 {
            font-size: 50px;
            text-shadow: 2px 2px 4px black;
        }
        p {
            font-size: 22px;
            background: rgba(0, 0, 0, 0.5);
            padding: 15px;
            display: inline-block;
            border-radius: 10px;
        }
        .button {
            margin-top: 20px;
            padding: 15px 30px;
            font-size: 20px;
            background: red;
            color: white;
            border: none;
            cursor: pointer;
            border-radius: 5px;
        }
        .button:hover {
            background: darkred;
        }
        .hidden-message {
            display: none;
            margin-top: 20px;
            font-size: 24px;
            color: yellow;
            font-weight: bold;
        }
    </style>
</head>
<body>

    <div class="container">
        <h1>Happy Rose Day, My Love!</h1>
        <p>Every petal of a rose whispers my love for you. You are the most precious flower in my life! ‚ù§Ô∏è</p>
        <br>
        <button class="button" onclick="showSurprise()">Click for a Surprise</button>
        <p class="hidden-message" id="surpriseText">I Love You Forever! üíñüåπ</p>
    </div>

    <!-- Background Music -->
    <audio autoplay loop>
        <source src="your-music-file.mp3" type="audio/mpeg">
    </audio>

    <script>
        function showSurprise() {
            document.getElementById("surpriseText").style.display = "block";
        }
    </script>

</body>
</html>Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: '.'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
